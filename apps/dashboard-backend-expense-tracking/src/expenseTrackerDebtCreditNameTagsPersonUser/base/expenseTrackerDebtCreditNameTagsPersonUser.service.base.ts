/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ExpenseTrackerDebtCreditNameTagsPersonUser as PrismaExpenseTrackerDebtCreditNameTagsPersonUser,
} from "@prisma/client";

export class ExpenseTrackerDebtCreditNameTagsPersonUserServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<
      Prisma.ExpenseTrackerDebtCreditNameTagsPersonUserCountArgs,
      "select"
    >
  ): Promise<number> {
    return this.prisma.expenseTrackerDebtCreditNameTagsPersonUser.count(args);
  }

  async expenseTrackerDebtCreditNameTagsPersonUsers(
    args: Prisma.ExpenseTrackerDebtCreditNameTagsPersonUserFindManyArgs
  ): Promise<PrismaExpenseTrackerDebtCreditNameTagsPersonUser[]> {
    return this.prisma.expenseTrackerDebtCreditNameTagsPersonUser.findMany(
      args
    );
  }
  async expenseTrackerDebtCreditNameTagsPersonUser(
    args: Prisma.ExpenseTrackerDebtCreditNameTagsPersonUserFindUniqueArgs
  ): Promise<PrismaExpenseTrackerDebtCreditNameTagsPersonUser | null> {
    return this.prisma.expenseTrackerDebtCreditNameTagsPersonUser.findUnique(
      args
    );
  }
  async createExpenseTrackerDebtCreditNameTagsPersonUser(
    args: Prisma.ExpenseTrackerDebtCreditNameTagsPersonUserCreateArgs
  ): Promise<PrismaExpenseTrackerDebtCreditNameTagsPersonUser> {
    return this.prisma.expenseTrackerDebtCreditNameTagsPersonUser.create(args);
  }
  async updateExpenseTrackerDebtCreditNameTagsPersonUser(
    args: Prisma.ExpenseTrackerDebtCreditNameTagsPersonUserUpdateArgs
  ): Promise<PrismaExpenseTrackerDebtCreditNameTagsPersonUser> {
    return this.prisma.expenseTrackerDebtCreditNameTagsPersonUser.update(args);
  }
  async deleteExpenseTrackerDebtCreditNameTagsPersonUser(
    args: Prisma.ExpenseTrackerDebtCreditNameTagsPersonUserDeleteArgs
  ): Promise<PrismaExpenseTrackerDebtCreditNameTagsPersonUser> {
    return this.prisma.expenseTrackerDebtCreditNameTagsPersonUser.delete(args);
  }
}
